REPO_DIR := Comparison-of-Java-vs.-C-Memory-Management-Performance-Benchmarks
CPP_DIR := $(REPO_DIR)/C++
JAVA_DIR := $(REPO_DIR)/Java
BUILD_DIR := $(CPP_DIR)/build

REQUIRED_CXX_VERSION := 13.1.0
REQUIRED_JAVA_VERSION := 21
REQUIRED_GRADLE_VERSION := 8.12.1
REQUIRED_CMAKE_VERSION := 3.31.5
REQUIRED_PYTHON_VERSION := 3.13.1

# Цель по умолчанию
build: check_dependencies build_cpp build_java

# Проверка зависимостей
check_dependencies:
	@echo "Checking dependencies..."
	@echo "Checking C++ compiler (g++)..."
	@if ! command -v g++ > /dev/null; then \
		echo "Error: g++ is not installed."; \
		exit 1; \
	else \
		CXX_VERSION=$$(g++ --version | head -n 1 | awk '{print $$3}'); \
		if [ "$$CXX_VERSION" != "$(REQUIRED_CXX_VERSION)" ]; then \
			echo "Error: g++ version $$CXX_VERSION is installed, but version $(REQUIRED_CXX_VERSION) is required."; \
			exit 1; \
		else \
			echo "g++ version $$CXX_VERSION is OK."; \
		fi; \
	fi

	@echo "Checking Java SDK (java)..."
	@if ! command -v java > /dev/null; then \
		echo "Error: java is not installed."; \
		exit 1; \
	else \
		JAVA_VERSION=$$(java --version | head -n 1 | awk '{print $$2}'); \
		if [ "$$JAVA_VERSION" != "$(REQUIRED_JAVA_VERSION)" ]; then \
			echo "Error: Java version $$JAVA_VERSION is installed, but version $(REQUIRED_JAVA_VERSION) is required."; \
			exit 1; \
		else \
			echo "Java version $$JAVA_VERSION is OK."; \
		fi; \
	fi

	@echo "Checking Gradle..."
	@if ! command -v gradle > /dev/null; then \
		echo "Error: gradle is not installed."; \
		exit 1; \
	else \
		GRADLE_VERSION=$$(gradle --version | grep Gradle | awk '{print $$2}'); \
		if [ "$$GRADLE_VERSION" != "$(REQUIRED_GRADLE_VERSION)" ]; then \
			echo "Error: Gradle version $$GRADLE_VERSION is installed, but version $(REQUIRED_GRADLE_VERSION) is required."; \
			exit 1; \
		else \
			echo "Gradle version $$GRADLE_VERSION is OK."; \
		fi; \
	fi

	@echo "Checking CMake..."
	@if ! command -v cmake > /dev/null; then \
		echo "Error: cmake is not installed."; \
		exit 1; \
	else \
		CMAKE_VERSION=$$(cmake --version | head -n 1 | awk '{print $$3}'); \
		if [ "$$CMAKE_VERSION" != "$(REQUIRED_CMAKE_VERSION)" ]; then \
			echo "Error: CMake version $$CMAKE_VERSION is installed, but version $(REQUIRED_CMAKE_VERSION) is required."; \
			exit 1; \
		else \
			echo "CMake version $$CMAKE_VERSION is OK."; \
		fi; \
	fi

	@echo "Checking Python..."
	@if ! command -v python3 > /dev/null; then \
		echo "Error: python3 is not installed."; \
		exit 1; \
	else \
		PYTHON_VERSION=$$(python3 --version | awk '{print $$2}'); \
		if [ "$$PYTHON_VERSION" != "$(REQUIRED_PYTHON_VERSION)" ]; then \
			echo "Error: Python version $$PYTHON_VERSION is installed, but version $(REQUIRED_PYTHON_VERSION) is required."; \
			exit 1; \
		else \
			echo "Python version $$PYTHON_VERSION is OK."; \
		fi; \
	fi

	@echo "All dependencies are OK."

# Сборка C++ части
build_cpp:
	@echo "Building C++ part..."
	@mkdir -p $(BUILD_DIR)
	@cd $(BUILD_DIR) && cmake .. && cmake --build .

# Сборка Java части
build_java:
	@echo "Building Java part..."
	@cd $(JAVA_DIR) && gradle build

# Очистка
clean:
	@echo "Cleaning up..."
	@rm -rf $(BUILD_DIR)
	@cd $(JAVA_DIR) && gradle clean

# Полная очистка (включая репозиторий)
distclean: clean
	@echo "Removing repository..."
	@rm -rf $(REPO_DIR)

.PHONY: build check_dependencies build_cpp build_java clean distclean